[tox]
envlist = sync,do,dev,changes,clean
skip_missing_interpreters = true
isolated_build = true
skipsdist = true

[base]
deps =
    pip>=22.1

[testenv]
skip_install = true
install_command = pip install {opts} {packages}

[testenv:{sync,do}]
envdir = {toxinidir}/.sync
# these 2 tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    do: Run cmd following "--" from .sync environment, e.g. "tox -e do -- repolite --show"
    sync: Install repolite and use it for cloning worflow deps

passenv =
    REPO_CFG
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    GITHUB*
    OS
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    XDG_*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    {[base]deps}
    build
    repolite @ https://github.com/sarnold/repolite/releases/download/0.6.2/repolite-0.6.2.tar.gz

commands =
    sync: repolite {posargs:--quiet}
    do: {posargs:python -c 'print("No cmd provided")'}

[testenv:{dev,sdmmc,sdcard,qspi,deploy}]
envdir = {toxinidir}/.venv
# these tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

allowlist_externals =
    bash
    {sdcard,deploy}: sudo

description =
    dev: Create a kas build virtual environment with managed deps
    sdmmc: Build the default (wic) sdmmc boot target
    sdcard: Burn the wic image to sdcard device (default: {env:DISK})
    qspi: Clean and build the qspi boot target
    deploy: Deploy qspi build products to sdcard

setenv =
    DEBUG = {env:DEBUG:}
    DEPLOY_DIR = {env:DEPLOY_DIR:build/tmp-glibc/deploy/images/{env:MACHINE}}
    DISK = {env:DISK:/dev/mmcblk0}
    MACHINE = {env:MACHINE:me-aa1-270-2i2-d11e-nfx3}
    UBOOT_CONFIG = {env:UBOOT_CONFIG:{envname}}

passenv =
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    XDG_*
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    {[base]deps}
    kas
    bmaptool @ git+https://github.com/sarnold/bmap-tools.git@pep517

commands_pre =
    bash -c '[[ -e layers/meta-user-aa1 ]] || ( mkdir -p layers && git clone https://github.com/VCTLabs/meta-user-aa1.git -b oe-mickledore layers/meta-user-aa1 )'

commands =
    dev: kas {posargs:"checkout"} layers/meta-user-aa1/build.yml
    qspi: bash -c 'rm -rf build/tmp*'
    {qspi,sdmmc}: kas shell layers/meta-user-aa1/build.yml -c 'UBOOT_CONFIG={env:UBOOT_CONFIG} bitbake devel-image-minimal'
    deploy: bash scripts/populate_sdcard.sh {env:DISK} {env:DEPLOY_DIR}

[testenv:changes]
skip_install = true
always_copy = False

allowlist_externals =
    bash

deps =
    {[base]deps}
    gitchangelog @ https://github.com/sarnold/gitchangelog/releases/download/3.2.0/gitchangelog-3.2.0-py3-none-any.whl

commands =
    bash -c 'gitchangelog {posargs} > CHANGELOG.rst'

[testenv:clean]
skip_install = true
allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    bash -c 'rm -rf  __pycache__ qspi/ build/tmp*'
